;; Emacs Package manager initialization
(require 'package)
(package-initialize)

;; Emacs package repository
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("elpa" . "https://elpa.typefo.com/packages/") t)

;; 设置编辑器标题
(set-frame-name "emacs@localhost")

;; 设置本地语言环境编码
(set-locale-environment "UTF-8")
(set-language-environment 'UTF-8)

;; 设置禁用启动画面
(setq inhibit-startup-message t)
(setq show-paren-style 'parenthesis)

;; 设置启动时窗口的高度宽度和工具栏菜单显示方式
(setq default-frame-alist '((height . 35) (width . 130) (menu-bar-lines . 20) (tool-bar-lines . 0)))

;; 禁止字体压缩，提高中文处理速度
(setq inhibit-compacting-font-caches t)

;; 设置默认字体
(set-frame-font "-outline-Consolas-normal-normal-normal-mono-16-*-*-*-c-*-iso8859-1")
(dolist (charset '(kana han symbol cjk-misc bopomofo))
  (set-fontset-font (frame-parameter nil 'font)
                    charset (font-spec :family "Microsoft Yahei" :size 14)))

;; 设置emacs自动加载路径
(add-to-list 'load-path "~/.emacs.d/lisp")

;; 加载主题样式
(load-theme 'wombat t)

(delete-selection-mode t)

;; 禁用滚动条
(scroll-bar-mode -1)

;; 禁止显示换行符号
(global-visual-line-mode 0)
(set-default 'truncate-lines t)

;; Old line number mode for Emacs (version <= 26.0.50)
;;(require 'linum)
;;(global-linum-mode t)

;; New line number mode for Emacs (version > 26)
(global-display-line-numbers-mode)
(setq-default display-line-numbers-width nil)

;; 设置当前行高亮样式
;;(require 'hl-line)
;;(global-hl-line-mode t)

;; 光标样式
(blink-cursor-mode -1)

;; 光标样式设置
(setq-default cursor-type 'box)

;; 鼠标自动离开
(mouse-avoidance-mode 'animate)

;; 滚当条滚动时吸附边距设置
(setq scroll-margin 3
      scroll-conservatively 10000)

;; 禁用警告音
(setq visible-bell t)

;; 光标颜色设置
(set-cursor-color "red")

;; 禁用文件自动备份
(setq-default make-backup-files nil)

;; Auto Save
(auto-save-visited-mode t)
(setq auto-save-visited-interval 1)

;; Common function library
(require 'common)

(require 'switcher)
(global-set-key (kbd "M-b") 'switcher)

;; shell projectile
(setq-default explicit-shell-file-name "c:/Program Files/Git/usr/bin/bash.exe")

;; Key binding
(global-set-key [f2] 'open-config-file)
(global-set-key [f4] 'kill-this-buffer)
(global-set-key [f5] 'goto-line)
(global-set-key [f7] 'indent-buffer)
(global-set-key [f8] 'shell)
(global-set-key [f11] 'toggle-frame-fullscreen)
(global-set-key (kbd "C-t") 'set-mark-command)
(global-set-key (kbd "C-j") 'copy-current-line)
(global-set-key (kbd "C-u") 'kill-whole-line)

(global-set-key (kbd "M-p") 'previous-buffer)
(global-set-key (kbd "M-n") 'next-buffer)

(global-set-key (kbd "M-<up>") 'move-line-up)
(global-set-key (kbd "M-<down>") 'move-line-down)

;; Expand-region
;;(global-set-key (kbd "C-i") 'er/expand-region)
;;(global-set-key (kbd "C-,") 'er/contract-region)

(setq backup-inhibited t)

;; 关闭文件自动保存
(setq auto-save-default nil)

;; yes/no 简化提示
(fset 'yes-or-no-p 'y-or-n-p)

;; 自动重载被修改文件
(global-auto-revert-mode t)

;;(abbrev-mode t)
;;(define-abbrev-table 'global-abbrev-table
;;    '(("html" "<!DOCTYPE html>\n<html>\n<head>\n</head>\n<body>\n\n</div>\n</html>")))

;; 窗口操作
;;(global-set-key (kbd "M-b")  'windmove-left)
;;(global-set-key (kbd "M-f") 'windmove-right)
;;(global-set-key (kbd "M-p")    'windmove-up)
;;(global-set-key (kbd "M-n")  'windmove-down)

;; yaml configure
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))

;;(setq minibuffer-max-depth nil)
(setq scroll-margin 1
      scroll-conservatively 100)

;; 状态条设置
(require 'powerline)
(powerline-default-theme)

;; Email setting
(add-hook 'gnus-group-mode-hook 'gnus-topic-mode)

(setq user-full-name "typefo")
(setq user-mail-address "typefo@hotmail.com")

(setq gnus-select-method
      '(nnimap "Hotmail"
               (nnimap-address "outlook.office365.com")
               (nnimap-server-port 993)
               (nnimap-stream ssl)))

;; Emacs lisp language
(add-hook 'emacs-lisp-mode-hook 'show-paren-mode)

;; C language
(setq default-tab-width 4)
;;(setq-default indent-tabs-mode nil)
(setq c-default-style "linux")
(setq c-basic-offset 4)

(add-hook 'cc-mode-hook '(lambda ()
                           (require 'auto-complete-c-headers)
                           (add-to-list 'ac-sources 'ac-source-c-headers))
          )

;; PHP language
(with-eval-after-load 'php-mode '(require 'php-ext))

(add-hook 'php-mode-hook
          '(lambda ()
             (require 'company-php)
             (company-mode t)
             (add-to-list 'company-backends 'company-ac-php-backend )))

;; Javascript language
(setq auto-mode-alist (append '(("\\.js\\'" . js2-mode)) auto-mode-alist))

;; Markdown language
;;(autoload 'markdown-mode "markdown-mode"
;;  "Major mode for editing Markdown files" t)
;;(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
;;(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
;;(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

;; buffer 平滑滚动
(defun smooth-scroll (increment)
  (scroll-up increment) (sit-for 0.05)
  (scroll-up increment) (sit-for 0.02)
  (scroll-up increment) (sit-for 0.02)
  (scroll-up increment) (sit-for 0.05)
  (scroll-up increment) (sit-for 0.06)
  (scroll-up increment))

;; org mode
                                        ;(setq org-html-validation-link nil)
                                        ;(setq org-html-doctype "html5")
                                        ;(require 'org-bullets)
                                        ;(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))

;; Compnay mode
(add-hook 'after-init-hook 'global-company-mode)
(setq company-idle-delay 0)

;; Company 快捷键
(with-eval-after-load 'company
  (define-key company-active-map (kbd "M-n") nil)
  (define-key company-active-map (kbd "M-p") nil)
  (define-key company-active-map (kbd "C-n") #'company-select-next)
  (define-key company-active-map (kbd "C-p") #'company-select-previous))


;; Web development
(require 'web-mode)
(setq auto-mode-alist (append '(("\\.html\\'" . web-mode)) auto-mode-alist))
(setq web-mode-markup-indent-offset 2)
(setq web-mode-css-indent-offset 2)
(setq web-mode-code-indent-offset 2)
(set-face-attribute 'web-mode-doctype-face nil :foreground "#228b22")
(set-face-attribute 'web-mode-html-tag-face nil :foreground "#87ceeb")
(set-face-attribute 'web-mode-html-attr-name-face nil :foreground "#cdbe70")
(set-face-attribute 'web-mode-html-attr-value-face nil :foreground "#bcee68")

;; bootstrap for Web development
(add-hook 'web-mode-hook '(lambda ()
                            (add-to-list 'company-backends 'company-bootstrap)))

;; Company 颜色主题

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-preview ((t (:background "gold3" :foreground "black"))))
 '(company-preview-common ((t (:background "gold3" :foreground "grey20"))))
 '(company-preview-search ((t (:background "green4" :foreground "green"))))
 '(company-scrollbar-bg ((t (:background "#303030"))))
 '(company-scrollbar-fg ((t (:background "#404040"))))
 '(company-tooltip ((t (:background "#2e2e2e" :foreground "grey"))))
 '(company-tooltip-annotation ((t (:foreground "lime green"))))
 '(company-tooltip-annotation-selection ((t (:foreground "white"))))
 '(company-tooltip-common ((t (:inherit company-tooltip :foreground "white"))))
 '(company-tooltip-common-selection ((t (:foreground "white"))))
 '(company-tooltip-selection ((t (:background "grey24" :foreground "white")))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(blink-cursor-mode nil)
 '(markdown-command "/d/local/bin/multimarkdown.exe")
 '(org-export-backends (quote (ascii beamer html icalendar latex odt)))
 '(package-selected-packages
   (quote
    (projectile yaml-mode web-mode company-bootstrap js2-mode company company-c-headers company-php powerline ac-php ac-php-core html5-schema powerline)))
 '(show-paren-mode t)
 '(tool-bar-mode nil))
